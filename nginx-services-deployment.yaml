apiVersion: apps/v1 # API-versionen som används för Deployment
kind: Deployment # Typen av Kubernetes-objekt, i detta fall en Deployment
metadata:
  name: nginx-deployment # Namnet på Deployment-objektet
  labels:
    app: nginx # Metadata labels för att identifiera objektet
spec:
  replicas: 2 # Antalet repliker (Pods) som ska köras. Failar en pod kommer kubenetes starta en ny pods så vi alltid har 2st igång.
  selector:
    matchLabels:
      app: nginx # Etikett som Pods måste matcha för att tillhöra denna Deployment
  template:
    metadata:
      labels:
        app: nginx # Etikett som appliceras på Pods
    spec:
      containers:
        - name: nginx
          image: py-app # Docker-bilden som används för containern. Så först bygger vi våran docker container och namnger den py-app
          imagePullPolicy: Never
          ports:
            - containerPort: 8000 # Port som containern lyssnar på

---
apiVersion: v1 # API-versionen för att skapa en Service
kind: Service # Typen av Kubernetes-objekt, i detta fall en Service
metadata:
  name: nginx-service # Namnet på Service-objektet
spec:
  selector:
    app: nginx # Välj Pods med etiketten "app: nginx"
  ports:
    - protocol: TCP # Protokollet som används, i detta fall TCP
      port: 80 # Porten som Service kommer att lyssna på
      targetPort: 8000 # Porten på Pods som Service kommer att vidarebefordra trafiken till
      nodePort: 31000 # Den specifika porten på noderna som trafiken vidarebefordras till (för NodePort)
  type: NodePort # Typen av Service, i detta fall NodePort

