# Name of the GitHub Actions workflow
name: Python Django CI

# Defines when the workflow should run
on:
  pull_request:
    branches:
      - main

# Defines the jobs that will be executed
jobs:
  build:
    # Specifies the type of machine to run the job on
    runs-on: ubuntu-latest

    # Services container to run PostgreSQL
    services:
      db:
        image: postgres:alpine3.20

        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 20s  # Increased interval
          --health-timeout 10s  # Increased timeout
          --health-retries 10   # Increased retries

    # Defines the steps to execute in the job
    steps:
      # Step to checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step to set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step to install project dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Step to wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do  # Changed 'db' to 'localhost'
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      # Step to run migrations
      - name: Run migrations
        run: |
          python blog_project/manage.py migrate

      # Step to run tests
      - name: Run tests
        run: |
          python blog_project/manage.py test

      # Step to print PostgreSQL logs (if needed)
      - name: Print PostgreSQL logs (if needed)
        if: failure() # This step runs if any of the previous steps fail
        run: docker logs db
